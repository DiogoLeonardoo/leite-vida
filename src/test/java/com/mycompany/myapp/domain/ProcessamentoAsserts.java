package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProcessamentoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProcessamentoAllPropertiesEquals(Processamento expected, Processamento actual) {
        assertProcessamentoAutoGeneratedPropertiesEquals(expected, actual);
        assertProcessamentoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProcessamentoAllUpdatablePropertiesEquals(Processamento expected, Processamento actual) {
        assertProcessamentoUpdatableFieldsEquals(expected, actual);
        assertProcessamentoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProcessamentoAutoGeneratedPropertiesEquals(Processamento expected, Processamento actual) {
        assertThat(actual)
            .as("Verify Processamento auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProcessamentoUpdatableFieldsEquals(Processamento expected, Processamento actual) {
        assertThat(actual)
            .as("Verify Processamento relevant properties")
            .satisfies(a -> assertThat(a.getDataProcessamento()).as("check dataProcessamento").isEqualTo(expected.getDataProcessamento()))
            .satisfies(a -> assertThat(a.getTecnicoResponsavel()).as("check tecnicoResponsavel").isEqualTo(expected.getTecnicoResponsavel())
            )
            .satisfies(a -> assertThat(a.getValorAcidezDornic()).as("check valorAcidezDornic").isEqualTo(expected.getValorAcidezDornic()))
            .satisfies(a -> assertThat(a.getValorCaloricoKcal()).as("check valorCaloricoKcal").isEqualTo(expected.getValorCaloricoKcal()))
            .satisfies(a -> assertThat(a.getResultadoAnalise()).as("check resultadoAnalise").isEqualTo(expected.getResultadoAnalise()))
            .satisfies(a ->
                assertThat(a.getStatusProcessamento()).as("check statusProcessamento").isEqualTo(expected.getStatusProcessamento())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProcessamentoUpdatableRelationshipsEquals(Processamento expected, Processamento actual) {
        assertThat(actual)
            .as("Verify Processamento relationships")
            .satisfies(a -> assertThat(a.getEstoque()).as("check estoque").isEqualTo(expected.getEstoque()));
    }
}
