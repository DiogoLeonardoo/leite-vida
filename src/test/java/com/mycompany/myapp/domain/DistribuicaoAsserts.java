package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DistribuicaoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDistribuicaoAllPropertiesEquals(Distribuicao expected, Distribuicao actual) {
        assertDistribuicaoAutoGeneratedPropertiesEquals(expected, actual);
        assertDistribuicaoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDistribuicaoAllUpdatablePropertiesEquals(Distribuicao expected, Distribuicao actual) {
        assertDistribuicaoUpdatableFieldsEquals(expected, actual);
        assertDistribuicaoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDistribuicaoAutoGeneratedPropertiesEquals(Distribuicao expected, Distribuicao actual) {
        assertThat(actual)
            .as("Verify Distribuicao auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDistribuicaoUpdatableFieldsEquals(Distribuicao expected, Distribuicao actual) {
        assertThat(actual)
            .as("Verify Distribuicao relevant properties")
            .satisfies(a -> assertThat(a.getDataDistribuicao()).as("check dataDistribuicao").isEqualTo(expected.getDataDistribuicao()))
            .satisfies(a ->
                assertThat(a.getVolumeDistribuidoMl()).as("check volumeDistribuidoMl").isEqualTo(expected.getVolumeDistribuidoMl())
            )
            .satisfies(a -> assertThat(a.getResponsavelEntrega()).as("check responsavelEntrega").isEqualTo(expected.getResponsavelEntrega())
            )
            .satisfies(a ->
                assertThat(a.getResponsavelRecebimento()).as("check responsavelRecebimento").isEqualTo(expected.getResponsavelRecebimento())
            )
            .satisfies(a -> assertThat(a.getObservacoes()).as("check observacoes").isEqualTo(expected.getObservacoes()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDistribuicaoUpdatableRelationshipsEquals(Distribuicao expected, Distribuicao actual) {
        assertThat(actual)
            .as("Verify Distribuicao relationships")
            .satisfies(a -> assertThat(a.getEstoque()).as("check estoque").isEqualTo(expected.getEstoque()))
            .satisfies(a -> assertThat(a.getPaciente()).as("check paciente").isEqualTo(expected.getPaciente()));
    }
}
