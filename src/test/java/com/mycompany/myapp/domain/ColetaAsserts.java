package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ColetaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertColetaAllPropertiesEquals(Coleta expected, Coleta actual) {
        assertColetaAutoGeneratedPropertiesEquals(expected, actual);
        assertColetaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertColetaAllUpdatablePropertiesEquals(Coleta expected, Coleta actual) {
        assertColetaUpdatableFieldsEquals(expected, actual);
        assertColetaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertColetaAutoGeneratedPropertiesEquals(Coleta expected, Coleta actual) {
        assertThat(actual)
            .as("Verify Coleta auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertColetaUpdatableFieldsEquals(Coleta expected, Coleta actual) {
        assertThat(actual)
            .as("Verify Coleta relevant properties")
            .satisfies(a -> assertThat(a.getDataColeta()).as("check dataColeta").isEqualTo(expected.getDataColeta()))
            .satisfies(a -> assertThat(a.getVolumeMl()).as("check volumeMl").isEqualTo(expected.getVolumeMl()))
            .satisfies(a -> assertThat(a.getTemperatura()).as("check temperatura").isEqualTo(expected.getTemperatura()))
            .satisfies(a -> assertThat(a.getLocalColeta()).as("check localColeta").isEqualTo(expected.getLocalColeta()))
            .satisfies(a -> assertThat(a.getObservacoes()).as("check observacoes").isEqualTo(expected.getObservacoes()))
            .satisfies(a -> assertThat(a.getStatusColeta()).as("check statusColeta").isEqualTo(expected.getStatusColeta()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertColetaUpdatableRelationshipsEquals(Coleta expected, Coleta actual) {
        assertThat(actual)
            .as("Verify Coleta relationships")
            .satisfies(a -> assertThat(a.getProcessamento()).as("check processamento").isEqualTo(expected.getProcessamento()))
            .satisfies(a -> assertThat(a.getDoadora()).as("check doadora").isEqualTo(expected.getDoadora()));
    }
}
